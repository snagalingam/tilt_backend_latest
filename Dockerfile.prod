# Pull base image
FROM python:3.9

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# Create the app user
RUN addgroup --system app && adduser --system --group app

# Create the appropriate directories
ENV APP_HOME=/home/app
WORKDIR $APP_HOME

# Install Python dependencies
COPY Pipfile Pipfile.lock $APP_HOME/
RUN pip install pipenv && pipenv install --system

# Add the rest of the code
COPY . $APP_HOME/

# SECRET_KEY is only included here to avoid raising an error when generating static files.
# Be sure to add a real SECRET_KEY config variable in deployment.
RUN SECRET_KEY=somethingsupersecret \
  python manage.py collectstatic --noinput

# Chown all the files to the app user
RUN chown -R app:app $APP_HOME

# chmod all database files
RUN chmod 600 $APP_HOME/.postgresql/staging/*

# Change to the app user
USER app

# Run entrypoint.sh that verifies that Postgres is healthy before applying the migrations
ENTRYPOINT ["sh", "entrypoint.sh"]

# expose port
EXPOSE 8000

# Run command to start container
CMD ["gunicorn", "backend.wsgi", "-b", "0.0.0.0:8000"]
